---
apiVersion: v1
kind: Namespace
metadata:
  name: kea-car-microservices
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-data
  namespace: kea-car-microservices
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysqldb-admin
  namespace: kea-car-microservices
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-auth
  namespace: kea-car-microservices
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-customer
  namespace: kea-car-microservices
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysqldb-employee
  namespace: kea-car-microservices
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kea-env
  namespace: kea-car-microservices
data:
  RABBITMQ_USERNAME: guest
  RABBITMQ_PASSWORD: guest
  MYSQL_DB_ADMIN_ROOTPASSWORD: rootpassword
  MONGO_DB_AUTH_ROOT_USERNAME: root
  MONGO_DB_AUTH_ROOT_PASSWORD: rootpassword
  MONGO_DB_CUSTOMER_ROOT_USERNAME: root
  MONGO_DB_CUSTOMER_ROOT_PASSWORD: rootpassword
  MYSQL_DB_EMPLOYEE_ROOT_PASSWORD: rootpassword
  # Add other env vars as needed
---
apiVersion: v1
kind: Secret
metadata:
  name: kea-secrets
  namespace: kea-car-microservices
type: Opaque
stringData:
  rabbitmq-user: user
  rabbitmq-pass: password
  mysql-admin-root: adminpassword
  mongo-auth-root-user: root
  mongo-auth-root-pass: rootpassword
  mongo-customer-root-user: root
  mongo-customer-root-pass: rootpassword
  mysql-employee-root: employeepassword
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: kea-car-microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management
          ports:
            - containerPort: 5672
            - containerPort: 15672
            - containerPort: 15692
          env:
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                configMapKeyRef:
                  name: kea-env
                  key: RABBITMQ_USERNAME
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                configMapKeyRef:
                  name: kea-env
                  key: RABBITMQ_PASSWORD
          volumeMounts:
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq
          readinessProbe:
            exec:
              command: ["rabbitmqctl", "status"]
            initialDelaySeconds: 30
            periodSeconds: 30
      volumes:
        - name: rabbitmq-data
          persistentVolumeClaim:
            claimName: rabbitmq-data
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: kea-car-microservices
spec:
  selector:
    app: rabbitmq
  ports:
    - name: amqp
      port: 5672
      targetPort: 5672
    - name: management
      port: 15672
      targetPort: 15672
    - name: prometheus
      port: 15692
      targetPort: 15692
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysqldb-admin
  namespace: kea-car-microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysqldb-admin
  template:
    metadata:
      labels:
        app: mysqldb-admin
    spec:
      containers:
        - name: mysqldb-admin
          image: mysql:latest
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: kea-env
                  key: MYSQL_DB_ADMIN_ROOTPASSWORD
          volumeMounts:
            - name: mysqldb-admin
              mountPath: /var/lib/mysql
            - name: init-admin-db
              mountPath: /docker-entrypoint-initdb.d/init_admin_db.sql
              subPath: init_admin_db.sql
      volumes:
        - name: mysqldb-admin
          persistentVolumeClaim:
            claimName: mysqldb-admin
        - name: init-admin-db
          configMap:
            name: init-admin-db
            items:
              - key: init_admin_db.sql
                path: init_admin_db.sql
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: init-admin-db
  namespace: kea-car-microservices
data:
  init_admin_db.sql: |
  volumeMounts:
    - name: init-admin-db
      mountPath: /docker-entrypoint-initdb.d/init_admin_db.sql
      subPath: init_admin_db.sql
---
apiVersion: v1
kind: Service
metadata:
  name: mysqldb-admin
  namespace: kea-car-microservices
spec:
  selector:
    app: mysqldb-admin
  ports:
    - port: 3307
      targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-auth
  namespace: kea-car-microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb-auth
  template:
    metadata:
      labels:
        app: mongodb-auth
    spec:
      containers:
        - name: mongodb-auth
          image: mongo:latest
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: kea-env
                  key: MONGO_DB_AUTH_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: kea-env
                  key: MONGO_DB_AUTH_ROOT_PASSWORD
            - name: MONGO_INITDB_DATABASE
              value: kea_cars_auth_dev
          volumeMounts:
            - name: mongodb-auth
              mountPath: /data/db
      volumes:
        - name: mongodb-auth
          persistentVolumeClaim:
            claimName: mongodb-auth
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-auth
  namespace: kea-car-microservices
spec:
  selector:
    app: mongodb-auth
  ports:
    - port: 27019
      targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-customer
  namespace: kea-car-microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb-customer
  template:
    metadata:
      labels:
        app: mongodb-customer
    spec:
      containers:
        - name: mongodb-customer
          image: mongo:latest
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: kea-env
                  key: MONGO_DB_CUSTOMER_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: kea-env
                  key: MONGO_DB_CUSTOMER_ROOT_PASSWORD
            - name: MONGO_INITDB_DATABASE
              value: kea_cars_customer_dev
          volumeMounts:
            - name: mongodb-customer
              mountPath: /data/db
      volumes:
        - name: mongodb-customer
          persistentVolumeClaim:
            claimName: mongodb-customer
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-customer
  namespace: kea-car-microservices
spec:
  selector:
    app: mongodb-customer
  ports:
    - port: 27018
      targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysqldb-employee
  namespace: kea-car-microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysqldb-employee
  template:
    metadata:
      labels:
        app: mysqldb-employee
    spec:
      containers:
        - name: mysqldb-employee
          image: mysql:latest
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: kea-env
                  key: MYSQL_DB_EMPLOYEE_ROOT_PASSWORD
          volumeMounts:
            - name: mysqldb-employee
              mountPath: /var/lib/mysql
            - name: init-employee-db
              mountPath: /docker-entrypoint-initdb.d/init_employee_db.sql
              subPath: init_employee_db.sql
      volumes:
        - name: mysqldb-employee
          persistentVolumeClaim:
            claimName: mysqldb-employee
        - name: init-employee-db
          configMap:
            name: init-employee-db
            items:
              - key: init_employee_db.sql
                path: init_employee_db.sql
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: init-employee-db
  namespace: kea-car-microservices
data:
  init_employee_db.sql: |
    # Place your SQL initialization script here or mount as a volume if too large
---
apiVersion: v1
kind: Service
metadata:
  name: mysqldb-employee
  namespace: kea-car-microservices
spec:
  selector:
    app: mysqldb-employee
  ports:
    - port: 3308
      targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: seed-mongodb-auth
  namespace: kea-car-microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: seed-mongodb-auth
  template:
    metadata:
      labels:
        app: seed-mongodb-auth
    spec:
      containers:
        - name: seed-mongodb-auth
          image: seed_mongodb_auth_image:latest
          envFrom:
            - configMapRef:
                name: kea-env
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: seed-mongodb-customer
  namespace: kea-car-microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: seed-mongodb-customer
  template:
    metadata:
      labels:
        app: seed-mongodb-customer
    spec:
      containers:
        - name: seed-mongodb-customer
          image: seed_mongodb_customer_image:latest
          envFrom:
            - configMapRef:
                name: kea-env
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-microservice
  namespace: kea-car-microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admin-microservice
  template:
    metadata:
      labels:
        app: admin-microservice
    spec:
      containers:
        - name: admin-microservice
          image: oliroat/admin_microservice:latest
          ports:
            - containerPort: 8000
          env:
            - name: API_HOST
              value: "0.0.0.0"
            - name: API_PORT
              value: "8000"
            - name: RABBITMQ_HOST
              value: "rabbitmq"
            - name: RABBITMQ_PORT
              value: "5672"
            - name: RABBITMQ_USERNAME
              value: "guest"
            - name: RABBITMQ_PASSWORD
              value: "guest"
            - name: MYSQL_DB_HOST
              value: "mysqldb_admin"
            - name: MYSQL_DB_PORT
              value: "3306"
            - name: MYSQL_DB_ROOT_USERNAME
              value: "root"
            - name: MYSQL_DB_ROOT_PASSWORD
              value: "rootpassword"
            - name: MYSQL_DB_NAME
              value: "kea_cars_admin_dev"
            - name: MYSQL_DB_APPLICATION_USERNAME
              value: "application_user"
            - name: MYSQL_DB_APPLICATION_PASSWORD
              value: "supersecretpassword"
            - name: SECRET_KEY
              value: "secret"
---
apiVersion: v1
kind: Service
metadata:
  name: admin-microservice
  namespace: kea-car-microservices
spec:
  selector:
    app: admin-microservice
  ports:
    - port: 8000
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-microservice
  namespace: kea-car-microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-microservice
  template:
    metadata:
      labels:
        app: auth-microservice
    spec:
      containers:
        - name: auth-microservice
          image: oliroat/auth_microservice:latest
          ports:
            - containerPort: 8001
          env:
            - name: API_HOST
              value: "0.0.0.0"
            - name: API_PORT
              value: "8001"
            - name: RABBITMQ_HOST
              value: "rabbitmq"
            - name: RABBITMQ_PORT
              value: "5672"
            - name: RABBITMQ_USERNAME
              value: "guest"
            - name: RABBITMQ_PASSWORD
              value: "guest"
            - name: MONGO_DB_HOST
              value: "mongodb_auth"
            - name: MONGO_DB_PORT
              value: "27017"
            - name: MONGO_DB_ROOT_USERNAME
              value: "root"
            - name: MONGO_DB_ROOT_PASSWORD
              value: "rootpassword"
            - name: MONGO_DB_NAME
              value: "kea_cars_auth_dev"
            - name: MONGO_DB_APPLICATION_USERNAME
              value: "application_user"
            - name: MONGO_DB_APPLICATION_PASSWORD
              value: "supersecretpassword"
            - name: SECRET_KEY
              value: "secret"
---
apiVersion: v1
kind: Service
metadata:
  name: auth-microservice
  namespace: kea-car-microservices
spec:
  selector:
    app: auth-microservice
  ports:
    - port: 8001
      targetPort: 8001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-microservice
  namespace: kea-car-microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: customer-microservice
  template:
    metadata:
      labels:
        app: customer-microservice
    spec:
      containers:
        - name: customer-microservice
          image: oliroat/customer_microservice:latest
          ports:
            - containerPort: 8002
          env:
            - name: API_HOST
              value: "0.0.0.0"
            - name: API_PORT
              value: "8002"
            - name: MONGO_DB_HOST
              value: "mongodb_customer"
            - name: MONGO_DB_PORT
              value: "27017"
            - name: MONGO_DB_ROOT_USERNAME
              value: "root"
            - name: MONGO_DB_ROOT_PASSWORD
              value: "rootpassword"
            - name: MONGO_DB_NAME
              value: "kea_cars_customer_dev"
            - name: MONGO_DB_APPLICATION_USERNAME
              value: "application_user"
            - name: MONGO_DB_APPLICATION_PASSWORD
              value: "supersecretpassword"
---
apiVersion: v1
kind: Service
metadata:
  name: customer-microservice
  namespace: kea-car-microservices
spec:
  selector:
    app: customer-microservice
  ports:
    - port: 8002
      targetPort: 8002
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: employee-microservice
  namespace: kea-car-microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: employee-microservice
  template:
    metadata:
      labels:
        app: employee-microservice
    spec:
      containers:
        - name: employee-microservice
          image: oliroat/employee_microservice:latest
          ports:
            - containerPort: 8003
          env:
            - name: API_HOST
              value: "0.0.0.0"
            - name: API_PORT
              value: "8003"
            - name: RABBITMQ_HOST
              value: "rabbitmq"
            - name: RABBITMQ_PORT
              value: "5672"
            - name: RABBITMQ_USERNAME
              value: "guest"
            - name: RABBITMQ_PASSWORD
              value: "guest"
            - name: MYSQL_DB_HOST
              value: "mysqldb_employee"
            - name: MYSQL_DB_PORT
              value: "3306"
            - name: MYSQL_DB_ROOT_USERNAME
              value: "root"
            - name: MYSQL_DB_ROOT_PASSWORD
              value: "rootpassword"
            - name: MYSQL_DB_NAME
              value: "kea_cars_employee_dev"
            - name: MYSQL_DB_APPLICATION_USERNAME
              value: "application_user"
            - name: MYSQL_DB_APPLICATION_PASSWORD
              value: "supersecretpassword"
            - name: SECRET_KEY
              value: "secret"
---
apiVersion: v1
kind: Service
metadata:
  name: employee-microservice
  namespace: kea-car-microservices
spec:
  selector:
    app: employee-microservice
  ports:
    - port: 8003
      targetPort: 8003
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: synch-microservice
  namespace: kea-car-microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synch-microservice
  template:
    metadata:
      labels:
        app: synch-microservice
    spec:
      containers:
        - name: synch-microservice
          image: oliroat/synch_microservice:latest
          env:
            - name: RABBITMQ_HOST
              value: "rabbitmq"
            - name: RABBITMQ_PORT
              value: "5672"
            - name: RABBITMQ_USERNAME
              value: "guest"
            - name: RABBITMQ_PASSWORD
              value: "guest"
            - name: MONGO_DB_HOST
              value: "mongodb_customer"
            - name: MONGO_DB_PORT
              value: "27017"
            - name: MONGO_DB_ROOT_USERNAME
              value: "root"
            - name: MONGO_DB_ROOT_PASSWORD
              value: "rootpassword"
            - name: MONGO_DB_NAME
              value: "kea_cars_customer_dev"
